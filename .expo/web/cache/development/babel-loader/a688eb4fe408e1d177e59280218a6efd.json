{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Chris\\\\Desktop\\\\CupO'JavaScript\\\\CupOJavaScript\\\\components\\\\Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUser } from \"../redux/actions/index\";\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport FeedScreen from \"./main/Feed\";\nimport ProfileScreen from \"./main/Profile\";\nimport UserlistScreen from \"./main/Userlist\";\nvar Tab = createMaterialBottomTabNavigator();\n\nvar EmptyScreen = function EmptyScreen() {\n  return null;\n};\n\nexport var Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchUser();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Tab.Navigator, {\n        initialRouteName: \"Feed\",\n        labeled: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Feed\",\n        component: FeedScreen,\n        listeners: function listeners(_ref) {\n          var navigation = _ref.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Feed\", {\n                userDataIsRetrieved: false\n              });\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n                size = _ref2.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"pizza\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 29\n              }\n            });\n          },\n          tabBarLabelPosition: 'below-icon'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Userlist\",\n        component: UserlistScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color,\n                size = _ref3.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"account-multiple\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 29\n              }\n            });\n          },\n          tabBarLabelPosition: 'below-icon'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Add\",\n        component: EmptyScreen,\n        listeners: function listeners(_ref4) {\n          var navigation = _ref4.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"AddContainer\");\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref5) {\n            var color = _ref5.color,\n                size = _ref5.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"camera\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 29\n              }\n            });\n          },\n          tabBarLabelPosition: 'below-icon'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref6) {\n            var color = _ref6.color,\n                size = _ref6.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"account-circle\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 29\n              }\n            });\n          },\n          tabBarLabelPosition: 'below-icon'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUser: fetchUser\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Main);","map":{"version":3,"sources":["C:/Users/Chris/Desktop/CupO'JavaScript/CupOJavaScript/components/Main.js"],"names":["React","Component","connect","bindActionCreators","fetchUser","createMaterialBottomTabNavigator","MaterialCommunityIcons","FeedScreen","ProfileScreen","UserlistScreen","Tab","EmptyScreen","Main","props","navigation","tabPress","event","preventDefault","navigate","userDataIsRetrieved","tabBarIcon","color","size","tabBarLabelPosition","mapStateToProps","store","currentUser","userState","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { View, Text } from 'react-native'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { fetchUser } from '../redux/actions/index'\r\n\r\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs'\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\r\n\r\nimport FeedScreen from './main/Feed'\r\nimport ProfileScreen from './main/Profile'\r\nimport UserlistScreen from './main/Userlist'\r\n\r\nconst Tab = createMaterialBottomTabNavigator(); \r\n\r\nconst EmptyScreen = () => {\r\n    return(null)\r\n}\r\n\r\nexport class Main extends Component {\r\n    componentDidMount() {\r\n       this.props.fetchUser();\r\n    }\r\n    render() {\r\n        return (\r\n            <Tab.Navigator initialRouteName=\"Feed\" labeled={false}>\r\n                <Tab.Screen name=\"Feed\" component={FeedScreen} \r\n                listeners={({ navigation }) => ({\r\n                    tabPress: event => {\r\n                        event.preventDefault();\r\n                        navigation.navigate(\"Feed\", { userDataIsRetrieved: false})\r\n                    }\r\n                })}\r\n                    options= {{\r\n                        tabBarIcon: ({color, size}) => (\r\n                            <MaterialCommunityIcons name=\"pizza\" color={color} size={26}/>\r\n                        ), tabBarLabelPosition: 'below-icon'\r\n                    }}\r\n                />\r\n                <Tab.Screen name=\"Userlist\" component={UserlistScreen} \r\n                    options= {{\r\n                        tabBarIcon: ({color, size}) => (\r\n                            <MaterialCommunityIcons name=\"account-multiple\" color={color} size={26}/>\r\n                        ), tabBarLabelPosition: 'below-icon'\r\n                    }}\r\n                />\r\n                <Tab.Screen name=\"Add\" component={EmptyScreen}\r\n                    listeners={({ navigation }) => ({\r\n                        tabPress: event => {\r\n                            event.preventDefault();\r\n                            navigation.navigate(\"AddContainer\")\r\n                        }\r\n                    })}\r\n                    options= {{\r\n                        tabBarIcon: ({color, size}) => (\r\n                            <MaterialCommunityIcons name=\"camera\" color={color} size={26}/>\r\n                        ), tabBarLabelPosition: 'below-icon'\r\n                    }}\r\n                />\r\n                <Tab.Screen name=\"Profile\" component={ProfileScreen} \r\n                    options= {{\r\n                        tabBarIcon: ({color, size}) => (\r\n                            <MaterialCommunityIcons name=\"account-circle\" color={color} size={26}/>\r\n                        ), tabBarLabelPosition: 'below-icon'\r\n                    }}\r\n                />\r\n            </Tab.Navigator>\r\n        )\r\n    }\r\n}\r\n// allows to freely access user's data within component\r\nconst mapStateToProps = (store) => ({\r\n    currentUser: store.userState.currentUser\r\n})\r\nconst mapDispatchProps = (dispatch) => bindActionCreators({fetchUser}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(Main);"]},"metadata":{},"sourceType":"module"}