{"ast":null,"code":"var _jsxFileName = \"/Users/steven/Desktop/CupOJavaScript/components/main/Save.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport fire from \"../fire\";\n\nrequire(\"firebase/firestore\");\n\nrequire(\"firebase/firebase-storage\");\n\nexport default function Save(props) {\n  var uploadImage = function uploadImage(type) {\n    var uri, childPath, alertMsg, response, blob, task, taskProgress, taskCompleted, taskError;\n    return _regeneratorRuntime.async(function uploadImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            uri = props.route.params.image;\n            childPath = '';\n            alertMsg = '';\n\n            if (type === \"image\") {\n              childPath = \"image/\" + fire.auth().currentUser.uid + \"/\" + Math.random().toString(36);\n              alertMsg = 'Image successfully saved!';\n            } else {\n              childPath = \"image/\" + fire.auth().currentUser.uid + \"/profilePicture.jpeg\";\n              alertMsg = 'Successfully set profile picture!';\n            }\n\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 6:\n            response = _context.sent;\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 9:\n            blob = _context.sent;\n            task = fire.storage().ref().child(childPath).put(blob);\n            console.log(\"task passed\");\n\n            taskProgress = function taskProgress(snapshot) {\n              console.log(\"transferred: \" + snapshot.bytesTransferred);\n            };\n\n            taskCompleted = function taskCompleted(snapshot) {\n              task.snapshot.ref.getDownloadURL().then(function (snapshot) {\n                console.log(snapshot);\n                alert(alertMsg);\n                fire.firestore().collection('users').doc(fire.auth().currentUser.uid).update({\n                  profilePicId: snapshot\n                });\n              });\n            };\n\n            taskError = function taskError(snapshot) {\n              console.log(snapshot);\n            };\n\n            task.on(\"state_changed\", taskProgress, taskError, taskCompleted);\n            alert('Uploading...');\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'space-evenly'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: props.route.params.image\n    },\n    style: {\n      flex: 1,\n      resizeMode: 'contain',\n      flexDirection: 'row',\n      width: '100%',\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Save\",\n    onPress: function onPress() {\n      return uploadImage(\"image\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Make Profile Picture\",\n    onPress: function onPress() {\n      return uploadImage(\"profile\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  cameraContainer: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  fixedRatio: {\n    flex: 1,\n    aspectRatio: 2 / 3\n  }\n});","map":{"version":3,"sources":["/Users/steven/Desktop/CupOJavaScript/components/main/Save.js"],"names":["React","fire","require","Save","props","uploadImage","type","uri","route","params","image","childPath","alertMsg","auth","currentUser","uid","Math","random","toString","fetch","response","blob","task","storage","ref","child","put","console","log","taskProgress","snapshot","bytesTransferred","taskCompleted","getDownloadURL","then","alert","firestore","collection","doc","update","profilePicId","taskError","on","flex","justifyContent","resizeMode","flexDirection","width","height","styles","StyleSheet","create","cameraContainer","fixedRatio","aspectRatio"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, Image, StyleSheet, Button, Text } from 'react-native'\n\nimport fire from '../fire'\nrequire(\"firebase/firestore\")\nrequire(\"firebase/firebase-storage\")\n\nexport default function Save(props) {\n\n    const uploadImage = async ( type ) => {\n        const uri = props.route.params.image;\n        var childPath = '';\n        var alertMsg = '';\n\n        if(type === \"image\") {\n            childPath = `image/${fire.auth().currentUser.uid}/${Math.random().toString(36)}`;\n            alertMsg = 'Image successfully saved!';\n        } else {\n            childPath = `image/${fire.auth().currentUser.uid}/profilePicture.jpeg`;\n            alertMsg = 'Successfully set profile picture!'\n        }\n        \n        const response = await fetch(uri);\n        const blob = await response.blob();\n        const task = fire\n            .storage()\n            .ref()\n            .child(childPath)\n            .put(blob)\n        console.log(\"task passed\");\n        const taskProgress = snapshot => {\n            console.log(`transferred: ${snapshot.bytesTransferred}`)\n        }\n\n        const taskCompleted = snapshot => {\n            task.snapshot.ref.getDownloadURL().then((snapshot) => {\n                console.log(snapshot);\n                alert(alertMsg);\n                fire.firestore().collection('users').doc(fire.auth().currentUser.uid).update({profilePicId: snapshot});\n            })\n        }\n\n        const taskError = snapshot => {\n            console.log(snapshot);\n        }\n\n        task.on(\"state_changed\", taskProgress, taskError, taskCompleted);\n        alert('Uploading...');\n    }\n    return (\n        <View style={{ flex: 1, justifyContent: 'space-evenly'}}>\n            <Image source={{uri: props.route.params.image}} style={{ flex: 1, resizeMode: 'contain', flexDirection: 'row', width: '100%', height: '100%'}}/>\n            <Button title=\"Save\" onPress={() => uploadImage(\"image\")}/>\n            <Button title=\"Make Profile Picture\" onPress={() => uploadImage(\"profile\")}/>\n        </View>\n    )\n}\nconst styles = StyleSheet.create({\n    cameraContainer: {\n      flex: 1,\n      flexDirection: 'row',\n    },\n    fixedRatio: {\n      flex: 1,\n      aspectRatio: 2 / 3\n    }\n  })\n"]},"metadata":{},"sourceType":"module"}