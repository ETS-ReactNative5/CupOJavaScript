{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport normalizeValueWithProperty from \"./normalizeValueWithProperty\";\nimport resolveShadowValue from \"./resolveShadowValue\";\nvar defaultOffset = {\n  height: 0,\n  width: 0\n};\n\nfunction boxShadowReducer(resolvedStyle, style) {\n  var boxShadow = style.boxShadow;\n  var shadow = resolveShadowValue(style);\n\n  if (shadow != null) {\n    resolvedStyle.boxShadow = boxShadow ? boxShadow + \", \" + shadow : shadow;\n  }\n}\n\nfunction textShadowReducer(resolvedStyle, style) {\n  var textShadowColor = style.textShadowColor,\n      textShadowOffset = style.textShadowOffset,\n      textShadowRadius = style.textShadowRadius;\n\n  var _ref = textShadowOffset || defaultOffset,\n      height = _ref.height,\n      width = _ref.width;\n\n  var radius = textShadowRadius || 0;\n  var offsetX = normalizeValueWithProperty(width);\n  var offsetY = normalizeValueWithProperty(height);\n  var blurRadius = normalizeValueWithProperty(radius);\n  var color = normalizeValueWithProperty(textShadowColor, 'textShadowColor');\n\n  if (color && (height !== 0 || width !== 0 || radius !== 0) && offsetX != null && offsetY != null && blurRadius != null) {\n    resolvedStyle.textShadow = offsetX + \" \" + offsetY + \" \" + blurRadius + \" \" + color;\n  }\n}\n\nvar createCompileableStyle = function createCompileableStyle(styles) {\n  var shadowColor = styles.shadowColor,\n      shadowOffset = styles.shadowOffset,\n      shadowOpacity = styles.shadowOpacity,\n      shadowRadius = styles.shadowRadius,\n      textShadowColor = styles.textShadowColor,\n      textShadowOffset = styles.textShadowOffset,\n      textShadowRadius = styles.textShadowRadius,\n      nextStyles = _objectWithoutProperties(styles, [\"shadowColor\", \"shadowOffset\", \"shadowOpacity\", \"shadowRadius\", \"textShadowColor\", \"textShadowOffset\", \"textShadowRadius\"]);\n\n  if (shadowColor != null || shadowOffset != null || shadowOpacity != null || shadowRadius != null) {\n    boxShadowReducer(nextStyles, styles);\n  }\n\n  if (textShadowColor != null || textShadowOffset != null || textShadowRadius != null) {\n    textShadowReducer(nextStyles, styles);\n  }\n\n  return nextStyles;\n};\n\nexport default createCompileableStyle;","map":{"version":3,"sources":["C:/Users/Chris/Desktop/CupO'JavaScript/CupOJavaScript/node_modules/react-native-web/src/exports/StyleSheet/createCompileableStyle.js"],"names":["normalizeValueWithProperty","resolveShadowValue","defaultOffset","height","width","boxShadowReducer","resolvedStyle","style","boxShadow","shadow","textShadowReducer","textShadowColor","textShadowOffset","textShadowRadius","radius","offsetX","offsetY","blurRadius","color","textShadow","createCompileableStyle","styles","shadowColor","shadowOffset","shadowOpacity","shadowRadius","nextStyles"],"mappings":";AASA,OAAOA,0BAAP;AACA,OAAOC,kBAAP;AAEA,IAAMC,aAAa,GAAG;AAAEC,EAAAA,MAAM,EAAE,CAAV;AAAaC,EAAAA,KAAK,EAAE;AAApB,CAAtB;;AAEA,SAASC,gBAAT,CAA0BC,aAA1B,EAAyCC,KAAzC,EAAgD;AAAA,MACtCC,SADsC,GACxBD,KADwB,CACtCC,SADsC;AAE9C,MAAMC,MAAM,GAAGR,kBAAkB,CAACM,KAAD,CAAjC;;AACA,MAAIE,MAAM,IAAI,IAAd,EAAoB;AAClBH,IAAAA,aAAa,CAACE,SAAd,GAA0BA,SAAS,GAAMA,SAAN,UAAoBC,MAApB,GAA+BA,MAAlE;AACD;AACF;;AAED,SAASC,iBAAT,CAA2BJ,aAA3B,EAA0CC,KAA1C,EAAiD;AAAA,MACvCI,eADuC,GACiBJ,KADjB,CACvCI,eADuC;AAAA,MACtBC,gBADsB,GACiBL,KADjB,CACtBK,gBADsB;AAAA,MACJC,gBADI,GACiBN,KADjB,CACJM,gBADI;;AAAA,aAErBD,gBAAgB,IAAIV,aAFC;AAAA,MAEvCC,MAFuC,QAEvCA,MAFuC;AAAA,MAE/BC,KAF+B,QAE/BA,KAF+B;;AAG/C,MAAMU,MAAM,GAAGD,gBAAgB,IAAI,CAAnC;AACA,MAAME,OAAO,GAAGf,0BAA0B,CAACI,KAAD,CAA1C;AACA,MAAMY,OAAO,GAAGhB,0BAA0B,CAACG,MAAD,CAA1C;AACA,MAAMc,UAAU,GAAGjB,0BAA0B,CAACc,MAAD,CAA7C;AACA,MAAMI,KAAK,GAAGlB,0BAA0B,CAACW,eAAD,EAAkB,iBAAlB,CAAxC;;AAEA,MACEO,KAAK,KACJf,MAAM,KAAK,CAAX,IAAgBC,KAAK,KAAK,CAA1B,IAA+BU,MAAM,KAAK,CADtC,CAAL,IAEAC,OAAO,IAAI,IAFX,IAGAC,OAAO,IAAI,IAHX,IAIAC,UAAU,IAAI,IALhB,EAME;AACAX,IAAAA,aAAa,CAACa,UAAd,GAA8BJ,OAA9B,SAAyCC,OAAzC,SAAoDC,UAApD,SAAkEC,KAAlE;AACD;AACF;;AAED,IAAME,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,MAAD,EAA4B;AAAA,MAEvDC,WAFuD,GAUrDD,MAVqD,CAEvDC,WAFuD;AAAA,MAGvDC,YAHuD,GAUrDF,MAVqD,CAGvDE,YAHuD;AAAA,MAIvDC,aAJuD,GAUrDH,MAVqD,CAIvDG,aAJuD;AAAA,MAKvDC,YALuD,GAUrDJ,MAVqD,CAKvDI,YALuD;AAAA,MAMvDd,eANuD,GAUrDU,MAVqD,CAMvDV,eANuD;AAAA,MAOvDC,gBAPuD,GAUrDS,MAVqD,CAOvDT,gBAPuD;AAAA,MAQvDC,gBARuD,GAUrDQ,MAVqD,CAQvDR,gBARuD;AAAA,MASpDa,UAToD,4BAUrDL,MAVqD;;AAYzD,MACEC,WAAW,IAAI,IAAf,IACAC,YAAY,IAAI,IADhB,IAEAC,aAAa,IAAI,IAFjB,IAGAC,YAAY,IAAI,IAJlB,EAKE;AACApB,IAAAA,gBAAgB,CAACqB,UAAD,EAAaL,MAAb,CAAhB;AACD;;AAED,MAAIV,eAAe,IAAI,IAAnB,IAA2BC,gBAAgB,IAAI,IAA/C,IAAuDC,gBAAgB,IAAI,IAA/E,EAAqF;AACnFH,IAAAA,iBAAiB,CAACgB,UAAD,EAAaL,MAAb,CAAjB;AACD;;AACD,SAAOK,UAAP;AACD,CAzBD;;AA2BA,eAAeN,sBAAf","sourcesContent":["/**\r\n * Copyright (c) Nicolas Gallagher.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow strict-local\r\n */\r\n\r\nimport normalizeValueWithProperty from './normalizeValueWithProperty';\r\nimport resolveShadowValue from './resolveShadowValue';\r\n\r\nconst defaultOffset = { height: 0, width: 0 };\r\n\r\nfunction boxShadowReducer(resolvedStyle, style) {\r\n  const { boxShadow } = style;\r\n  const shadow = resolveShadowValue(style);\r\n  if (shadow != null) {\r\n    resolvedStyle.boxShadow = boxShadow ? `${boxShadow}, ${shadow}` : shadow;\r\n  }\r\n}\r\n\r\nfunction textShadowReducer(resolvedStyle, style) {\r\n  const { textShadowColor, textShadowOffset, textShadowRadius } = style;\r\n  const { height, width } = textShadowOffset || defaultOffset;\r\n  const radius = textShadowRadius || 0;\r\n  const offsetX = normalizeValueWithProperty(width);\r\n  const offsetY = normalizeValueWithProperty(height);\r\n  const blurRadius = normalizeValueWithProperty(radius);\r\n  const color = normalizeValueWithProperty(textShadowColor, 'textShadowColor');\r\n\r\n  if (\r\n    color &&\r\n    (height !== 0 || width !== 0 || radius !== 0) &&\r\n    offsetX != null &&\r\n    offsetY != null &&\r\n    blurRadius != null\r\n  ) {\r\n    resolvedStyle.textShadow = `${offsetX} ${offsetY} ${blurRadius} ${color}`;\r\n  }\r\n}\r\n\r\nconst createCompileableStyle = (styles: Object): Object => {\r\n  const {\r\n    shadowColor,\r\n    shadowOffset,\r\n    shadowOpacity,\r\n    shadowRadius,\r\n    textShadowColor,\r\n    textShadowOffset,\r\n    textShadowRadius,\r\n    ...nextStyles\r\n  } = styles;\r\n\r\n  if (\r\n    shadowColor != null ||\r\n    shadowOffset != null ||\r\n    shadowOpacity != null ||\r\n    shadowRadius != null\r\n  ) {\r\n    boxShadowReducer(nextStyles, styles);\r\n  }\r\n\r\n  if (textShadowColor != null || textShadowOffset != null || textShadowRadius != null) {\r\n    textShadowReducer(nextStyles, styles);\r\n  }\r\n  return nextStyles;\r\n};\r\n\r\nexport default createCompileableStyle;\r\n"]},"metadata":{},"sourceType":"module"}