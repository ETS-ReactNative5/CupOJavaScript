{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Chris\\\\Desktop\\\\CupO'JavaScript\\\\CupOJavaScript\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { LogBox } from \"react-native-web/dist/index\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport LottieView from 'lottie-react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport fire from \"./components/fire\";\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from \"./redux/reducers\";\nimport thunk from 'redux-thunk';\nvar store = createStore(rootReducer, applyMiddleware(thunk));\nimport CreateProfileScreen from \"./components/auth/CreateProfile\";\nimport RegisterScreen from \"./components/auth/Register\";\nimport LoginScreen from \"./components/auth/Login\";\nimport MainScreen from \"./components/Main\";\nimport AddScreen from \"./components/main/Add\";\nimport SaveScreen from \"./components/main/Save\";\nimport ChoosePurposeScreen from \"./components/auth/ChoosePurpose\";\nimport BarcodeScreen from \"./components/BarcodeScreen\";\nimport * as Font from 'expo-font';\nimport { ActivityIndicator } from 'react-native-paper';\nvar Stack = createStackNavigator();\nvar customFonts = {\n  'NunitoSans-Bold': require(\"./assets/fonts/NunitoSans-Bold.ttf\"),\n  'NunitoSans-Regular': require(\"./assets/fonts/NunitoSans-Regular.ttf\"),\n  'Montserrat-SemiBold': require(\"./assets/fonts/Montserrat-SemiBold.ttf\"),\n  'Montserrat-Regular': require(\"./assets/fonts/Montserrat-Regular.ttf\")\n};\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      loaded: false,\n      fontsLoaded: false,\n      createdProfile: false\n    };\n    LogBox.ignoreLogs(['Setting a timer']);\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"_loadFontsAsync\",\n    value: function _loadFontsAsync() {\n      return _regeneratorRuntime.async(function _loadFontsAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync(customFonts));\n\n            case 2:\n              this.setState({\n                fontsLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._loadFontsAsync();\n\n      fire.auth().onAuthStateChanged(function (user) {\n        if (!user) {\n          _this2.setState({\n            loggedIn: false,\n            loaded: true,\n            createdProfile: false\n          });\n        } else {\n          _this2.setState({\n            loggedIn: true,\n            loaded: true\n          });\n\n          fire.firestore().collection('users').doc(fire.auth().currentUser.uid).get().then(function (doc) {\n            if (doc.exists) {\n              _this2.setState({\n                createdProfile: true\n              });\n            } else {\n              _this2.setState({\n                createdProfile: false\n              });\n            }\n          }).catch(function (error) {\n            alert(error.message);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loggedIn = _this$state.loggedIn,\n          loaded = _this$state.loaded,\n          createdProfile = _this$state.createdProfile;\n\n      if (!loaded || !this.state.fontsLoaded) {\n        if (Platform.OS == 'web') {\n          return React.createElement(ActivityIndicator, {\n            size: \"large\",\n            style: {\n              flex: 1,\n              justifyContent: 'center'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 14\n            }\n          });\n        }\n\n        return React.createElement(LottieView, {\n          source: require(\"./assets/animations/loading.json\"),\n          autoPlay: true,\n          loop: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 14\n          }\n        });\n      }\n\n      if (!loggedIn) {\n        return React.createElement(NavigationContainer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 7\n          }\n        }, React.createElement(Stack.Navigator, {\n          initialRouteName: \"Register\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 7\n          }\n        }, React.createElement(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen,\n          navigation: this.props.navigation,\n          options: {\n            headerShown: false,\n            animationEnabled: false\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 9\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen,\n          navigation: this.props.navigation,\n          options: {\n            headerShown: false,\n            animationEnabled: false\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 9\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"CreateProfile\",\n          component: CreateProfileScreen,\n          navigation: this.props.navigation,\n          options: {\n            headerShown: false,\n            animationEnabled: false\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 9\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"AddContainer\",\n          component: AddScreen,\n          navigation: this.props.navigation,\n          options: {\n            headerShown: false,\n            animationEnabled: false\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 9\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Save\",\n          component: SaveScreen,\n          navigation: this.props.navigation,\n          options: {\n            headerBackTitle: \"Back\",\n            animationEnabled: false\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 9\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"ChoosePurpose\",\n          component: ChoosePurposeScreen,\n          navigation: this.props.navigation,\n          options: {\n            headerShown: false,\n            animationEnabled: false\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 9\n          }\n        })));\n      }\n\n      return React.createElement(Provider, {\n        store: store,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 7\n        }\n      }, React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }\n      }, React.createElement(Stack.Navigator, {\n        initialRouteName: \"Main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Main\",\n        component: MainScreen,\n        options: {\n          headerShown: false,\n          animationEnabled: false\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"AddContainer\",\n        component: AddScreen,\n        navigation: this.props.navigation,\n        options: {\n          headerBackTitle: \"Back\",\n          animationEnabled: false\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Save\",\n        component: SaveScreen,\n        navigation: this.props.navigation,\n        options: {\n          headerBackTitle: \"Back\",\n          animationEnabled: false\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"BarcodeScreen\",\n        component: BarcodeScreen,\n        navigation: this.props.navigation,\n        options: {\n          headerShown: true,\n          headerBackTitle: \"Back\",\n          animationEnabled: false\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["C:/Users/Chris/Desktop/CupO'JavaScript/CupOJavaScript/App.js"],"names":["StatusBar","React","Component","LogBox","LottieView","NavigationContainer","createStackNavigator","fire","Provider","createStore","applyMiddleware","rootReducer","thunk","store","CreateProfileScreen","RegisterScreen","LoginScreen","MainScreen","AddScreen","SaveScreen","ChoosePurposeScreen","BarcodeScreen","Font","ActivityIndicator","Stack","customFonts","require","App","props","state","loaded","fontsLoaded","createdProfile","ignoreLogs","loadAsync","setState","_loadFontsAsync","auth","onAuthStateChanged","user","loggedIn","firestore","collection","doc","currentUser","uid","get","then","exists","catch","error","alert","message","Platform","OS","flex","justifyContent","navigation","headerShown","animationEnabled","headerBackTitle"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler'\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport React, { Component } from 'react';\r\nimport { StyleSheet, Text, View, LogBox, Platform } from 'react-native';\r\nimport LottieView from 'lottie-react-native'\r\n\r\n\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nimport fire from './components/fire';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from './redux/reducers'\r\nimport thunk from 'redux-thunk';\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nimport CreateProfileScreen from './components/auth/CreateProfile'\r\nimport RegisterScreen from './components/auth/Register';\r\nimport LoginScreen from './components/auth/Login'\r\nimport MainScreen from './components/Main';\r\nimport AddScreen from './components/main/Add';\r\nimport SaveScreen from './components/main/Save'\r\nimport ChoosePurposeScreen from './components/auth/ChoosePurpose'\r\nimport BarcodeScreen from './components/BarcodeScreen'\r\n\r\nimport * as Font from 'expo-font'\r\nimport { ActivityIndicator } from 'react-native-paper';\r\n\r\n// Stack to handle navigation\r\nconst Stack = createStackNavigator();\r\n\r\n// custom fonts\r\nlet customFonts = {\r\n  'NunitoSans-Bold': require('./assets/fonts/NunitoSans-Bold.ttf'),\r\n  'NunitoSans-Regular': require('./assets/fonts/NunitoSans-Regular.ttf'),\r\n  'Montserrat-SemiBold': require('./assets/fonts/Montserrat-SemiBold.ttf'),\r\n  'Montserrat-Regular': require('./assets/fonts/Montserrat-Regular.ttf'),\r\n};\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loaded: false,\r\n      fontsLoaded: false,\r\n      createdProfile: false\r\n    }\r\n    LogBox.ignoreLogs(['Setting a timer']);\r\n  }\r\n\r\n  async _loadFontsAsync() {\r\n    await Font.loadAsync(customFonts);\r\n    this.setState({ fontsLoaded: true });\r\n  }\r\n\r\n  // check whether user is logged in\r\n  componentDidMount() {\r\n    this._loadFontsAsync();\r\n    fire.auth().onAuthStateChanged((user) => {\r\n      if(!user) {\r\n        this.setState({\r\n          loggedIn: false,\r\n          loaded: true,\r\n          createdProfile: false\r\n        })\r\n      } else {\r\n        this.setState({\r\n          loggedIn: true,\r\n          loaded: true\r\n        })\r\n\r\n      fire.firestore().collection('users')\r\n      .doc(fire.auth().currentUser.uid)\r\n      .get().then((doc) => {\r\n        if(doc.exists) {\r\n          this.setState({ createdProfile: true })\r\n        } else {\r\n          this.setState({ createdProfile: false})\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message)\r\n      });\r\n      }\r\n    })\r\n    }\r\n      \r\n\r\n  render() {\r\n    const { loggedIn, loaded, createdProfile } = this.state;\r\n\r\n    // if not loaded display loading screen\r\n    if(!loaded || !this.state.fontsLoaded) {\r\n      if(Platform.OS == 'web') {\r\n      return <ActivityIndicator size=\"large\" style={{ flex: 1 , justifyContent: 'center'}}/>\r\n      }\r\n      return <LottieView source={require('./assets/animations/loading.json')} autoPlay loop />;\r\n    }\r\n    \r\n\r\n    // if not logged in display navigation container\r\n    if(!loggedIn) {\r\n    return (\r\n      <NavigationContainer>\r\n      <Stack.Navigator initialRouteName=\"Register\">\r\n        <Stack.Screen name=\"Register\" component={RegisterScreen} navigation={this.props.navigation} options={{  headerShown: false, animationEnabled: false }}/>\r\n        <Stack.Screen name=\"Login\" component={LoginScreen} navigation={this.props.navigation} options={{  headerShown: false, animationEnabled: false }}/>\r\n        <Stack.Screen name=\"CreateProfile\" component={CreateProfileScreen} navigation={this.props.navigation} options={{  headerShown: false, animationEnabled: false }}/>\r\n        <Stack.Screen name=\"AddContainer\" component={AddScreen} navigation={this.props.navigation} options={{ headerShown: false, animationEnabled: false }}/>\r\n        <Stack.Screen name=\"Save\" component={SaveScreen} navigation={this.props.navigation} options={{ headerBackTitle: \"Back\", animationEnabled: false }}/>\r\n        <Stack.Screen name=\"ChoosePurpose\" component={ChoosePurposeScreen} navigation={this.props.navigation} options={{  headerShown: false, animationEnabled: false }}/>\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n    )\r\n    }\r\n\r\n    // if(!createdProfile) {\r\n    // return(\r\n    //   <NavigationContainer>\r\n    //     <Stack.Navigator initialRouteName=\"CreateProfile\">\r\n    //       <Stack.Screen name=\"CreateProfile\" component={CreateProfileScreen} navigation={this.props.navigation} options={{  headerShown: false, animationEnabled: false }}/>\r\n    //     </Stack.Navigator>\r\n    // </NavigationContainer>\r\n    // )\r\n    // }\r\n      \r\n\r\n    return(\r\n      // must be inside provider to allow redux to work\r\n      <Provider store={store}>\r\n        <NavigationContainer>\r\n          <Stack.Navigator initialRouteName={\"Main\"}>\r\n          <Stack.Screen name=\"Main\" component={MainScreen} options={{ headerShown: false, animationEnabled: false}}/>\r\n          <Stack.Screen name=\"AddContainer\" component={AddScreen} navigation={this.props.navigation} options={{ headerBackTitle: \"Back\", animationEnabled: false }}/>\r\n          <Stack.Screen name=\"Save\" component={SaveScreen} navigation={this.props.navigation} options={{ headerBackTitle: \"Back\", animationEnabled: false }}/>\r\n          <Stack.Screen name=\"BarcodeScreen\" component={BarcodeScreen} navigation={this.props.navigation} options={{ headerShown: true, headerBackTitle: \"Back\", animationEnabled: false }}/>\r\n          </Stack.Navigator>\r\n        </NavigationContainer>\r\n      </Provider>\r\n    \r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}