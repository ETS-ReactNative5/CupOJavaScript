{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/steven/Desktop/CupOJavaScript/components/main/Feed.js\";\nimport React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport fire from \"../fire\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useEffect } from \"react-native-web/dist/index\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport colors from \"../../assets/colors/colors\";\nexport default function Feed() {\n  var _this = this;\n\n  var today = new Date();\n  var logDate = 'Fri Feb 18 2022';\n  var usersDB = fire.firestore().collection('users');\n  var userID = fire.auth().currentUser.uid;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      sex = _useState2[0],\n      setSex = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      age = _useState4[0],\n      setAge = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      weight = _useState6[0],\n      setWeight = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      feet = _useState8[0],\n      setFeet = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      inches = _useState10[0],\n      setInches = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      purpose = _useState12[0],\n      setPurpose = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      dailyFood = _useState14[0],\n      setDailyFood = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      splitDailyFood = _useState16[0],\n      setSplitDailyFood = _useState16[1];\n\n  var totalHeight = feet * 12 + Number(inches);\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      recommendedCalories = _useState18[0],\n      setRecommendedCalories = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      purposeCalories = _useState20[0],\n      setPurposeCalories = _useState20[1];\n\n  var _useState21 = useState(0),\n      _useState22 = _slicedToArray(_useState21, 2),\n      dailyCalories = _useState22[0],\n      setDailyCalories = _useState22[1];\n\n  var _useState23 = useState(5),\n      _useState24 = _slicedToArray(_useState23, 2),\n      startIndex = _useState24[0],\n      setStartIndex = _useState24[1];\n\n  var _useState25 = useState(10),\n      _useState26 = _slicedToArray(_useState25, 2),\n      endIndex = _useState26[0],\n      setEndIndex = _useState26[1];\n\n  var _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      userDataIsRetrieved = _useState28[0],\n      setUserDataIsRetrieved = _useState28[1];\n\n  var newDailyFood = undefined;\n  var newFoodName = \"\";\n  var newFoodCalories = \"\";\n\n  function updateFeed() {\n    usersDB.doc(userID).collection(\"DailyFood\").add(newDailyFood).then(function (result) {\n      console.log(result);\n    }).catch(function (error) {\n      console.log(error);\n      Alert.alert('Error', error.message, [{\n        text: 'OK'\n      }], {\n        cancelable: true\n      });\n    });\n    setUserDataIsRetrieved(false);\n  }\n\n  var getUserInfo = function getUserInfo() {\n    usersDB.doc(userID).get().then(function (snapshot) {\n      setSex(snapshot.data().sex);\n      setWeight(snapshot.data().weight);\n      setFeet(snapshot.data().feet);\n      setInches(snapshot.data().inches);\n      setAge(snapshot.data().age);\n      setPurpose(snapshot.data().purpose);\n      calculateCalories();\n    });\n    usersDB.doc(userID).collection('DailyFood').where('createdAt', '==', logDate).get().then(function (querySnapshot) {\n      var dailyFoodData = querySnapshot.docs.map(function (doc) {\n        return doc.data();\n      });\n      setDailyFood(dailyFoodData);\n      setSplitDailyFood(dailyFoodData.slice(0, 5));\n      setUserDataIsRetrieved(true);\n      changeDailyCalories();\n    }).catch(function (error) {\n      console.log('Error getting documents: ', error);\n    });\n  };\n\n  function validateFoodInputs(name, calories) {\n    var errorMsg = 'Invalid fields:';\n    var isError = false;\n\n    if (name == \"\") {\n      errorMsg += '\\nName';\n      isError = true;\n    }\n\n    if (calories == \"\" || calories < 0) {\n      errorMsg += '\\nCalories';\n      isError = true;\n    }\n\n    if (isError == true) {\n      alert(errorMsg);\n      isError = false;\n    } else {\n      typeNewFood(name, calories);\n    }\n  }\n\n  function typeNewFood(name, calories) {\n    var timestamp = logDate;\n    newDailyFood = {\n      name: name,\n      calories: calories,\n      createdAt: timestamp\n    };\n    updateFeed();\n    alert(\"You added: \" + name);\n    changeDailyCalories();\n  }\n\n  function changeDailyCalories() {\n    var currentCals = 0;\n\n    if (dailyFood != null) {\n      for (var i = 0; i < dailyFood.length; i++) {\n        currentCals += parseFloat(dailyFood[i].calories);\n      }\n    }\n\n    setDailyCalories(currentCals);\n  }\n\n  function calculateCalories() {\n    var calories = \"\";\n\n    if (sex == \"male\") {\n      calories = 66 + 6.3 * weight + Number(12.9 * totalHeight) - 6.8 * age;\n      setRecommendedCalories(calories);\n    } else {\n      calories = 65 + 4.3 * weight + Number(4.7 * totalHeight) - 4.7 * age;\n      setRecommendedCalories(calories);\n    }\n\n    calculatePurposeCalories(calories);\n  }\n\n  var continueList = function continueList(start, end) {\n    setSplitDailyFood(splitDailyFood.concat(dailyFood.slice(start, end)));\n    setStartIndex(startIndex + 5);\n    setEndIndex(endIndex + 5);\n  };\n\n  function calculatePurposeCalories(calories) {\n    if (purpose == \"donate\") {\n      setPurposeCalories(calories - 500);\n    } else {\n      setPurposeCalories(calories + 500);\n    }\n  }\n\n  if (userDataIsRetrieved == false) {\n    getUserInfo();\n  }\n\n  return React.createElement(LinearGradient, {\n    colors: [colors.lightBlue, colors.darkBlue],\n    style: styles.outerScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, React.createElement(SafeAreaView, {\n    style: styles.contentCenter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, React.createElement(StatusBar, {\n    barStyle: \"light-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.pageHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, \"Feed\"), React.createElement(View, {\n    style: styles.feedScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.feedRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.feedData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }, \"Your purpose is to \", purpose, \" weight\")), React.createElement(View, {\n    style: styles.feedRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.feedData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  }, \"Date: \", logDate.toString())), React.createElement(View, {\n    style: styles.feedRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.feedData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }\n  }, \"Daily Calories to maintain weight: \", Math.round(recommendedCalories), \" Cal\")), React.createElement(View, {\n    style: styles.feedRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.feedData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  }, \"Daily Calories to \", purpose, \" 1 lb: \", Math.round(purposeCalories), \" Cal\")), React.createElement(View, {\n    style: styles.feedRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.feedData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }, \"Current Daily Calories: \", dailyCalories, \" Cal\")), React.createElement(View, {\n    style: styles.feedRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    style: styles.nameInput,\n    placeholder: \"Name of food\",\n    returnKeyType: \"done\",\n    onChangeText: function onChangeText(editedFoodName) {\n      return newFoodName = editedFoodName;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    style: styles.calorieInput,\n    placeholder: \"Cals\",\n    returnKeyType: \"done\",\n    onChangeText: function onChangeText(editedFoodCalories) {\n      return newFoodCalories = editedFoodCalories;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    title: \"Add Food\",\n    onPress: function onPress() {\n      return validateFoodInputs(newFoodName, newFoodCalories);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    title: \"Refresh\",\n    onPress: function onPress() {\n      return getUserInfo();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 21\n    }\n  })), React.createElement(FlatList, {\n    data: dailyFood,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.foodData,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 25\n        }\n      }, item.createdAt === logDate && React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: styles.foodName,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 33\n        }\n      }, item.name, \" \"), React.createElement(Text, {\n        style: styles.foodCalories,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 33\n        }\n      }, item.calories)));\n    },\n    onEndReached: function onEndReached() {\n      return continueList(startIndex, endIndex);\n    },\n    onEndReachedThreshold: 1,\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }))));\n}\nvar styles = {\n  contentCenter: {\n    height: '100%',\n    alignItems: 'center'\n  },\n  feedScreen: {\n    height: '100%',\n    width: '100%',\n    backgroundColor: \"#FFFFFF\"\n  },\n  feedData: {\n    fontSize: 20\n  },\n  feedRow: {\n    flexDirection: 'row'\n  },\n  calorieInput: {\n    fontSize: 20,\n    width: 50\n  },\n  nameInput: {\n    fontSize: 20,\n    width: 200\n  },\n  outerScreen: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    height: '100%'\n  },\n  pageHeader: {\n    fontSize: 30,\n    fontFamily: 'NunitoSans-Bold',\n    color: '#000000'\n  },\n  foodData: {},\n  foodName: {\n    fontSize: 20,\n    color: '#000',\n    fontFamily: 'NunitoSans-Bold'\n  },\n  foodCalories: {\n    fontSize: 20,\n    color: '#000',\n    fontFamily: 'NunitoSans-Regular'\n  }\n};","map":{"version":3,"sources":["/Users/steven/Desktop/CupOJavaScript/components/main/Feed.js"],"names":["React","useState","StatusBar","fire","useEffect","SafeAreaView","LinearGradient","colors","Feed","today","Date","logDate","usersDB","firestore","collection","userID","auth","currentUser","uid","sex","setSex","age","setAge","weight","setWeight","feet","setFeet","inches","setInches","purpose","setPurpose","dailyFood","setDailyFood","splitDailyFood","setSplitDailyFood","totalHeight","Number","recommendedCalories","setRecommendedCalories","purposeCalories","setPurposeCalories","dailyCalories","setDailyCalories","startIndex","setStartIndex","endIndex","setEndIndex","userDataIsRetrieved","setUserDataIsRetrieved","newDailyFood","undefined","newFoodName","newFoodCalories","updateFeed","doc","add","then","result","console","log","catch","error","Alert","alert","message","text","cancelable","getUserInfo","get","snapshot","data","calculateCalories","where","querySnapshot","dailyFoodData","docs","map","slice","changeDailyCalories","validateFoodInputs","name","calories","errorMsg","isError","typeNewFood","timestamp","createdAt","currentCals","i","length","parseFloat","calculatePurposeCalories","continueList","start","end","concat","lightBlue","darkBlue","styles","outerScreen","contentCenter","pageHeader","feedScreen","feedRow","feedData","toString","Math","round","nameInput","editedFoodName","calorieInput","editedFoodCalories","flexDirection","justifyContent","item","foodData","flex","foodName","foodCalories","index","height","alignItems","width","backgroundColor","fontSize","position","left","right","top","fontFamily","color"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { StatusBar } from 'expo-status-bar'\n\nimport fire from '../fire'\nimport { Text, View, Button, TextInput, Image, FlatList, TouchableOpacity, useEffect } from 'react-native'\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport { LinearGradient } from 'expo-linear-gradient'\nimport colors from '../../assets/colors/colors'\n\nexport default function Feed() {\n\n    // Set today's date to track calories for today\n    let today = new Date();\n    // let logDate = today.toDateString(today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate());\n    let logDate = 'Fri Feb 18 2022';\n\n    const usersDB = fire.firestore().collection('users')\n    const userID = fire.auth().currentUser.uid\n\n    const [sex, setSex] = useState(\"\");\n    const [age, setAge] = useState(\"\");\n    const [weight, setWeight] = useState(\"\");\n    const [feet, setFeet] = useState(\"\");\n    const [inches, setInches] = useState(\"\");\n    const [purpose, setPurpose] = useState(\"\");\n    const [dailyFood, setDailyFood] = useState(null);\n    const [splitDailyFood, setSplitDailyFood] = useState(null);\n    let totalHeight = ((feet * 12) + Number(inches));\n\n    const [recommendedCalories, setRecommendedCalories] = useState(\"\");\n    const [purposeCalories, setPurposeCalories] = useState(\"\");\n    const [dailyCalories, setDailyCalories] = useState(0);\n    const [startIndex, setStartIndex] = useState(5);\n    const [endIndex, setEndIndex] = useState(10);\n\n    const [userDataIsRetrieved, setUserDataIsRetrieved] = useState(false);\n    let newDailyFood = undefined;\n    let newFoodName = \"\";\n    let newFoodCalories = \"\";\n    \n\n    function updateFeed() {\n        usersDB.doc(userID).collection(\"DailyFood\").add(newDailyFood)\n        .then((result) => {\n            console.log(result)\n        })\n        .catch((error) => {\n            console.log(error)\n            Alert.alert('Error', error.message, [{text: 'OK'},], {cancelable: true});\n        });\n     \n        setUserDataIsRetrieved(false);\n    }\n      \n    const getUserInfo = () => {\n        usersDB.doc(userID).get()\n        .then((snapshot => {\n                setSex(snapshot.data().sex);\n                setWeight(snapshot.data().weight);\n                setFeet(snapshot.data().feet);\n                setInches(snapshot.data().inches);\n                setAge(snapshot.data().age);\n                setPurpose(snapshot.data().purpose);\n\n                calculateCalories();\n            }))\n\n        // Retreieve DailyFood collection that stores the different food tracked for the current date which is stored in the logDate variable\n        usersDB.doc(userID).collection('DailyFood').where('createdAt', '==', logDate).get()\n        .then((querySnapshot) => {\n            let dailyFoodData = querySnapshot.docs.map(doc => doc.data());\n            setDailyFood(dailyFoodData);\n            setSplitDailyFood(dailyFoodData.slice(0, 5));\n            setUserDataIsRetrieved(true);\n            changeDailyCalories();\n        })\n        .catch((error) => {\n            console.log('Error getting documents: ', error);\n        });\n    }\n\n    function validateFoodInputs(name, calories) {\n        let errorMsg = 'Invalid fields:';\n        let isError = false;\n\n        if (name == \"\") {\n            errorMsg += '\\nName';\n            isError = true;\n        }\n\n        if (calories == \"\" || calories < 0) {\n            errorMsg += '\\nCalories';\n            isError = true;\n        }\n\n        //If an error was detected.\n        if (isError == true) {\n            alert(errorMsg);\n            isError = false;\n        }\n        //If everything is valid\n        else {\n            typeNewFood(name, calories);\n        }\n    }\n\n    function typeNewFood(name, calories) {\n        let timestamp = logDate;\n\n        newDailyFood = {name: name, calories: calories, createdAt: timestamp};\n        // let id = Object.keys(newDailyFood).length + 1;\n        // newDailyFood[id] = {name: name, calories: calories};\n        updateFeed();\n        alert(\"You added: \" + name);\n\n        changeDailyCalories();\n    }\n\n    function changeDailyCalories() {\n        let currentCals = 0;\n\n        if (dailyFood != null) {\n            for (let i = 0; i < dailyFood.length; i++) {\n                currentCals += parseFloat(dailyFood[i].calories);\n            }\n        }\n\n        setDailyCalories(currentCals);\n    }\n\n    //Recommended calories to maintain weight   \n    //BMR \n    //Harris-Benedict Formula\n    function calculateCalories() {\n        let calories = \"\";\n\n        if (sex == \"male\") {\n            calories = (66 + (6.3 * weight) + Number(12.9 * totalHeight) - (6.8 * age));\n            setRecommendedCalories(calories);\n        } \n        else {\n            calories = (65 + (4.3 * weight) + Number(4.7 * totalHeight) - (4.7 * age))\n            setRecommendedCalories(calories);\n        }\n\n        calculatePurposeCalories(calories);\n    }\n\n    const continueList = (start, end) => {\n        setSplitDailyFood(splitDailyFood.concat(dailyFood.slice(start, end)));\n        setStartIndex(startIndex + 5);\n        setEndIndex(endIndex + 5);\n    }\n\n    //calculates calories needed to gain or lose weight depending on user's purpose\n    function calculatePurposeCalories(calories) {\n        if (purpose == \"donate\") {\n            setPurposeCalories(calories - 500);\n        }\n        else {\n            setPurposeCalories(calories + 500);\n        }   \n    }\n\n    if (userDataIsRetrieved == false) {\n        getUserInfo();\n    }\n    \n\n    return (\n        <LinearGradient colors={[colors.lightBlue, colors.darkBlue]} style={styles.outerScreen}>\n        <SafeAreaView style = {styles.contentCenter}>\n            <StatusBar barStyle='light-content' />\n            <Text style={styles.pageHeader}>Feed</Text>\n            <View style = {styles.feedScreen}>\n\n                <View style = {styles.feedRow}>\n                    <Text style = {styles.feedData}>Your purpose is to {purpose} weight</Text>\n                </View>\n\n                <View style = {styles.feedRow}>\n                    <Text style = {styles.feedData}>Date: {logDate.toString()}</Text>\n                </View>\n\n                <View style = {styles.feedRow}>\n                    <Text style = {styles.feedData}>Daily Calories to maintain weight: {Math.round(recommendedCalories)} Cal</Text>\n                </View>\n\n                <View style = {styles.feedRow}>\n                    <Text style = {styles.feedData}>Daily Calories to {purpose} 1 lb: {Math.round(purposeCalories)} Cal</Text>\n                </View>\n\n                <View style = {styles.feedRow}>\n                    <Text style = {styles.feedData}>Current Daily Calories: {dailyCalories} Cal</Text>\n                </View>\n\n                <View style = {styles.feedRow}>\n                    <TextInput \n                        style = {styles.nameInput}\n                        placeholder = \"Name of food\"\n                        returnKeyType = 'done'\n                        onChangeText = {editedFoodName => newFoodName = editedFoodName}\n                    />\n                    <TextInput \n                        style = {styles.calorieInput}\n                        placeholder = \"Cals\"\n                        returnKeyType = 'done'\n                        onChangeText = {editedFoodCalories => newFoodCalories = editedFoodCalories}\n                    />\n                </View>\n                <View style={{ flexDirection: 'row', justifyContent: 'center'}}>\n                <Button\n                        title = 'Add Food'\n                        onPress = {() => validateFoodInputs(newFoodName, newFoodCalories)}\n                    />\n                    <Button\n                    title = 'Refresh'\n                    onPress = {() => getUserInfo()}\n                />\n                </View>\n                <FlatList\n                    data={dailyFood}\n                    renderItem={({item}) => \n                        <View style = {styles.foodData}>\n                            {item.createdAt === logDate &&\n                                <View style={{ flex: 1, flexDirection: 'row'}}>\n                                <Text style= {styles.foodName}>{item.name}{\" \"}</Text>\n                                <Text style= {styles.foodCalories}>{item.calories}</Text>\n                            </View>\n                            }\n                        </View>}\n                    onEndReached = {() => continueList(startIndex, endIndex)}\n                    onEndReachedThreshold = {1}\n                    keyExtractor = {(item, index) => index.toString()}\n                    />\n                    \n            </View>\n        </SafeAreaView>\n        </LinearGradient>\n    );\n}   \n\nconst styles = {\n    contentCenter: {\n        height: '100%',\n        alignItems: 'center'\n    },\n    feedScreen: {\n        height: '100%',\n        width: '100%',\n        backgroundColor: \"#FFFFFF\"\n    },\n    feedData: {\n        fontSize: 20,\n    },\n    feedRow: {\n        flexDirection: 'row',\n    },\n    calorieInput: {\n        fontSize: 20,\n        width: 50\n    },\n    nameInput: {\n        fontSize: 20,\n        width: 200\n    },\n    outerScreen:  {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        height: '100%'\n    },\n    pageHeader: {\n        fontSize: 30,\n        fontFamily: 'NunitoSans-Bold',\n        color: '#000000'\n    },\n    foodData: {\n    },\n    foodName: {\n        fontSize: 20,\n        color: '#000',\n        fontFamily: 'NunitoSans-Bold',\n    },\n    foodCalories: {\n        fontSize: 20,\n        color: '#000',\n        fontFamily: 'NunitoSans-Regular',\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}